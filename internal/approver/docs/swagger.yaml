definitions:
  approvals.AuthorizedResponder:
    properties:
      mfaSeed:
        type: string
      userId:
        type: string
      username:
        type: string
    type: object
  approvals.CallbackSpec:
    properties:
      type:
        allOf:
        - $ref: '#/definitions/approvals.CallbackType'
        description: |-
          Type defines the type of this callback. If this is not specified,
          the precedence will follow the code tagged with #callback-type-priority
      webhook:
        $ref: '#/definitions/approvals.WebhookCallbackSpec'
    type: object
  approvals.CallbackType:
    enum:
    - webhook
    type: string
    x-enum-varnames:
    - CallbackWebhook
  approvals.Notification:
    properties:
      error: {}
      isSuccess:
        type: boolean
      messageId:
        type: string
      platform:
        type: string
      requestUuid:
        type: string
      sentAt:
        type: string
      targetId:
        type: string
    type: object
  approvals.RequestLinkAttachment:
    properties:
      description:
        type: string
      url:
        type: string
    type: object
  approvals.SlackRequestSpec:
    properties:
      authorizedResponders:
        description: |-
          AuthorizedResponders is a list of users who are authorized to respond
          to this request
        items:
          $ref: '#/definitions/approvals.AuthorizedResponder'
        type: array
      channelIds:
        description: |-
          ChannelId defines the ID of the channel to send to, if this
          is populated, this will be used, otherwise this will be
          populated when the `.ChannelName` is evaluated
        items:
          type: string
        type: array
      channelNames:
        description: ChannelNames defines the name of the channel to send to
        items:
          type: string
        type: array
      notifications:
        description: Notifications contains details of the messages sent to Slack
        items:
          $ref: '#/definitions/approvals.Notification'
        type: array
    type: object
  approvals.TelegramRequestSpec:
    properties:
      authorizedResponders:
        description: |-
          AuthorizedResponders is a list of users who are authorized to respond
          to this request
        items:
          $ref: '#/definitions/approvals.AuthorizedResponder'
        type: array
      chatIds:
        description: ChatIds defines the ID of the chat where the message should be
          sent
        items:
          type: integer
        type: array
      notifications:
        description: Notifications contains details of the messages sent to Telegram
        items:
          $ref: '#/definitions/approvals.Notification'
        type: array
    type: object
  approvals.WebhookCallbackAuthSpec:
    properties:
      basic:
        $ref: '#/definitions/approvals.WebhookCallbackBasicAuthSpec'
      bearer:
        $ref: '#/definitions/approvals.WebhookCallbackBearerAuthSpec'
      header:
        $ref: '#/definitions/approvals.WebhookCallbackHeaderAuthSpec'
    type: object
  approvals.WebhookCallbackBasicAuthSpec:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  approvals.WebhookCallbackBearerAuthSpec:
    properties:
      value:
        type: string
    type: object
  approvals.WebhookCallbackHeaderAuthSpec:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  approvals.WebhookCallbackSpec:
    properties:
      auth:
        allOf:
        - $ref: '#/definitions/approvals.WebhookCallbackAuthSpec'
        description: |-
          Auth defines the auth mechanism to use when authenticating with
          the specified `.Url`
      method:
        description: Method defines the HTTP method used when sending the call
        type: string
      retryCount:
        description: |-
          RetryCount specifies the number of retries that will be made
          if the callback fails. Defaults to 5 with an exponential backoff
          strategy unless otherwise specfied
        type: integer
      retryIntervalSeconds:
        description: |-
          RetryIntervalSeconds when specified, forces the retry mechanism
          to perform retries at fxed intervals
        type: integer
      url:
        description: |-
          Url specifies the URL that will be called with the full approval
          request details when a request is approved/rejected
        type: string
    type: object
  approver.CreateApprovalRequestInput:
    properties:
      callback:
        allOf:
        - $ref: '#/definitions/approvals.CallbackSpec'
        description: |-
          Callback is a field that when specified, results in the approver
          service processing a callback to the specified endpoint
      id:
        description: |-
          Id is the ID of a request which will be the same for all
          requests of a given type
        type: string
      links:
        description: Links will be included in the approval request's message body
        items:
          $ref: '#/definitions/approvals.RequestLinkAttachment'
        type: array
      message:
        description: Message is an additional message describing the request
        type: string
      requesterId:
        description: RequesterName indicates the requester's system ID
        type: string
      requesterName:
        description: RequesterName indicates the requester's name
        type: string
      slack:
        description: Slack specifies the targets in Slack to send this request to
        items:
          $ref: '#/definitions/approvals.SlackRequestSpec'
        type: array
      telegram:
        description: Telegram specifies the targets in Telegram to send this request
          to
        items:
          $ref: '#/definitions/approvals.TelegramRequestSpec'
        type: array
    type: object
  approver.commonHttpResponse:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /api/v1/approval-request:
    get:
      consumes:
      - application/json
      description: This endpoint retrieves all approval requests
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/approver.commonHttpResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/approver.commonHttpResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/approver.commonHttpResponse'
      security:
      - BasicAuth: []
      summary: Retreives all approval requests
      tags:
      - approver-service
    post:
      consumes:
      - application/json
      description: This endpoint creates approval requests
      parameters:
      - description: Approval payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/approver.CreateApprovalRequestInput'
      produces:
      - application/json
      responses:
        "200":
          description: approved
          schema:
            $ref: '#/definitions/approver.commonHttpResponse'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/approver.commonHttpResponse'
        "500":
          description: 'internal server error" {"success": false}'
          schema:
            $ref: '#/definitions/approver.commonHttpResponse'
      security:
      - BasicAuth: []
      summary: Creates approval requests
      tags:
      - approver-service
  /api/v1/approval-request/{requestUuid}:
    get:
      consumes:
      - application/json
      description: This endpoint retrieves all approval requests
      parameters:
      - description: Request UUID
        in: path
        name: requestUuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/approver.commonHttpResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/approver.commonHttpResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/approver.commonHttpResponse'
      security:
      - BasicAuth: []
      summary: Retreives all approval requests
      tags:
      - approver-service
  /api/v1/approval/{approvalUuid}:
    get:
      consumes:
      - application/json
      description: This endpoint retrieves an approval given it's ID
      parameters:
      - description: Approval UUID
        in: path
        name: approvalUuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/approver.commonHttpResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/approver.commonHttpResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/approver.commonHttpResponse'
      security:
      - BasicAuth: []
      summary: Retreives an approval given it's ID
      tags:
      - approver-service
swagger: "2.0"
