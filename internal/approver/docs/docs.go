// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/approval-request": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "This endpoint retrieves all approval requests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "approver-service"
                ],
                "summary": "Retreives all approval requests",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/approver.commonHttpResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/approver.commonHttpResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/approver.commonHttpResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "This endpoint creates approval requests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "approver-service"
                ],
                "summary": "Creates approval requests",
                "parameters": [
                    {
                        "description": "Approval payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/approver.CreateApprovalRequestInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "approved",
                        "schema": {
                            "$ref": "#/definitions/approver.commonHttpResponse"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/approver.commonHttpResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error\" {\"success\": false}",
                        "schema": {
                            "$ref": "#/definitions/approver.commonHttpResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/approval-request/{requestUuid}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "This endpoint retrieves all approval requests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "approver-service"
                ],
                "summary": "Retreives all approval requests",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request UUID",
                        "name": "requestUuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/approver.commonHttpResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/approver.commonHttpResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/approver.commonHttpResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/approval/{approvalUuid}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "This endpoint retrieves an approval given it's ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "approver-service"
                ],
                "summary": "Retreives an approval given it's ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Approval UUID",
                        "name": "approvalUuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/approver.commonHttpResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/approver.commonHttpResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/approver.commonHttpResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "approvals.AuthorizedResponder": {
            "type": "object",
            "properties": {
                "mfaSeed": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "approvals.CallbackSpec": {
            "type": "object",
            "properties": {
                "type": {
                    "description": "Type defines the type of this callback. If this is not specified,\nthe precedence will follow the code tagged with #callback-type-priority",
                    "allOf": [
                        {
                            "$ref": "#/definitions/approvals.CallbackType"
                        }
                    ]
                },
                "webhook": {
                    "$ref": "#/definitions/approvals.WebhookCallbackSpec"
                }
            }
        },
        "approvals.CallbackType": {
            "type": "string",
            "enum": [
                "webhook"
            ],
            "x-enum-varnames": [
                "CallbackWebhook"
            ]
        },
        "approvals.Notification": {
            "type": "object",
            "properties": {
                "error": {},
                "isSuccess": {
                    "type": "boolean"
                },
                "messageId": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "requestUuid": {
                    "type": "string"
                },
                "sentAt": {
                    "type": "string"
                },
                "targetId": {
                    "type": "string"
                }
            }
        },
        "approvals.RequestLinkAttachment": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "approvals.SlackRequestSpec": {
            "type": "object",
            "properties": {
                "authorizedResponders": {
                    "description": "AuthorizedResponders is a list of users who are authorized to respond\nto this request",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/approvals.AuthorizedResponder"
                    }
                },
                "channelIds": {
                    "description": "ChannelId defines the ID of the channel to send to, if this\nis populated, this will be used, otherwise this will be\npopulated when the ` + "`" + `.ChannelName` + "`" + ` is evaluated",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "channelNames": {
                    "description": "ChannelNames defines the name of the channel to send to",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "notifications": {
                    "description": "Notifications contains details of the messages sent to Slack",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/approvals.Notification"
                    }
                }
            }
        },
        "approvals.TelegramRequestSpec": {
            "type": "object",
            "properties": {
                "authorizedResponders": {
                    "description": "AuthorizedResponders is a list of users who are authorized to respond\nto this request",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/approvals.AuthorizedResponder"
                    }
                },
                "chatIds": {
                    "description": "ChatIds defines the ID of the chat where the message should be sent",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "notifications": {
                    "description": "Notifications contains details of the messages sent to Telegram",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/approvals.Notification"
                    }
                }
            }
        },
        "approvals.WebhookCallbackAuthSpec": {
            "type": "object",
            "properties": {
                "basic": {
                    "$ref": "#/definitions/approvals.WebhookCallbackBasicAuthSpec"
                },
                "bearer": {
                    "$ref": "#/definitions/approvals.WebhookCallbackBearerAuthSpec"
                },
                "header": {
                    "$ref": "#/definitions/approvals.WebhookCallbackHeaderAuthSpec"
                }
            }
        },
        "approvals.WebhookCallbackBasicAuthSpec": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "approvals.WebhookCallbackBearerAuthSpec": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "approvals.WebhookCallbackHeaderAuthSpec": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "approvals.WebhookCallbackSpec": {
            "type": "object",
            "properties": {
                "auth": {
                    "description": "Auth defines the auth mechanism to use when authenticating with\nthe specified ` + "`" + `.Url` + "`" + `",
                    "allOf": [
                        {
                            "$ref": "#/definitions/approvals.WebhookCallbackAuthSpec"
                        }
                    ]
                },
                "method": {
                    "description": "Method defines the HTTP method used when sending the call",
                    "type": "string"
                },
                "retryCount": {
                    "description": "RetryCount specifies the number of retries that will be made\nif the callback fails. Defaults to 5 with an exponential backoff\nstrategy unless otherwise specfied",
                    "type": "integer"
                },
                "retryIntervalSeconds": {
                    "description": "RetryIntervalSeconds when specified, forces the retry mechanism\nto perform retries at fxed intervals",
                    "type": "integer"
                },
                "url": {
                    "description": "Url specifies the URL that will be called with the full approval\nrequest details when a request is approved/rejected",
                    "type": "string"
                }
            }
        },
        "approver.CreateApprovalRequestInput": {
            "type": "object",
            "properties": {
                "callback": {
                    "description": "Callback is a field that when specified, results in the approver\nservice processing a callback to the specified endpoint",
                    "allOf": [
                        {
                            "$ref": "#/definitions/approvals.CallbackSpec"
                        }
                    ]
                },
                "id": {
                    "description": "Id is the ID of a request which will be the same for all\nrequests of a given type",
                    "type": "string"
                },
                "links": {
                    "description": "Links will be included in the approval request's message body",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/approvals.RequestLinkAttachment"
                    }
                },
                "message": {
                    "description": "Message is an additional message describing the request",
                    "type": "string"
                },
                "requesterId": {
                    "description": "RequesterName indicates the requester's system ID",
                    "type": "string"
                },
                "requesterName": {
                    "description": "RequesterName indicates the requester's name",
                    "type": "string"
                },
                "slack": {
                    "description": "Slack specifies the targets in Slack to send this request to",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/approvals.SlackRequestSpec"
                    }
                },
                "telegram": {
                    "description": "Telegram specifies the targets in Telegram to send this request to",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/approvals.TelegramRequestSpec"
                    }
                }
            }
        },
        "approver.commonHttpResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {

}
